openapi: 3.0.0
info:
  title: Nimbus - Usuários
  description: >-
    Micro-serviço responsável pelo gerenciamento de dados relacionados aos
    usuários do sistema Nimbus
  version: 1.0.5
servers:
  - url: http://localhost:3000
    description: Servidor local porta 3000
paths:
  /users:
    post:
      tags:
        - Users
      summary: Insere um novo usuário.
      description: Registro de um novo usuário e atleta/treinador.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/UserAthlete"
            example:
              email: melissa@mail.com
              password: Melissa123@
              athlete:
                firstName: Melissa
                lastName: Cavalcante
                birthDate: 2004-10-07
                phone: null
                picture: null
                category: sub-20
                isStarting: true
          Treinador:
            schema:
              $ref: "#components/schemas/UserCoach"
            example:
              email: yago@mail.com
              password: Yago213@
              coach:
                firstName: Yago
                lastName: Silva
                birthDate: 2003-07-09
                phone: null
                picture: null
      responses:
        200:
          description: ID do usuário inserido
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Cadastro realizado
                serverMessage: null
                data: 875f6a77-4743-4330-b88b-3f29aac28191
        400:
          description: -Email e/ou senha inválidos, tipo de usuário não permitido ou não informado, credenciais de atleta ou treinador inválidos.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              examples:
                Credenciais de usuário Invalidas:
                  value:
                    clientMessage: Verifique suas credenciais de usuário.
                    serverMessage: Email inválido, Senha inválida.
                    data: null
                Tipo de usuário Invalido:
                  value:
                    clientMessage: Tipo de usuário não permitido ou não informado.
                    serverMessage: null
                    data: null
                Credenciais de atleta inválidas:
                  value:
                    clientMessage: Verifique suas credenciais de atleta.
                    serverMessage: Campo categoria é obrigatório, Campo titular é obrigatório.
                    data: null
                Credenciais de treinador inválidas:
                  value:
                    clientMessage: Verifique suas credenciais de treinador.
                    serverMessage: null
                    data: null
        409:
          description: Email já utilizado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Email já utilizado.
                serverMessage: null
                data: null

  /users/login:
    post:
      tags:
        - Users
      summary: Retorna usuário por email e senha.
      description: Busca usuário por email e senha. Retorna o tipo e id do usuário.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: melissa@mail.com
                password: Melissa123@
      responses:
        200:
          description: Login realizado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              examples:
                Treinador:
                  value:
                    clientMessage: Login realizado.
                    serverMessage: Coach
                    data: c834cbcc-1b88-4315-8126-3eac0c298695
                Atleta:
                  value:
                    clientMessage: Login realizado.
                    serverMessage: Athlete
                    data: 09f856c5-c88a-426d-a5eb-b0a42d65d3b5
        404:
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Usuário não encontrado.
                serverMessage: null
                data: null

  /users/{id}:
    get:
      tags:
        - Users
      summary: Retorna informações do usuário
      description: Retorna informações de persona do usuário por seu ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do usuário.
      responses:
        200:
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: null
                serverMessage: null
                data:
                  firstName: Melissa
                  lastName: Cavalcante
                  birthDate: 2004-10-07
                  phone: 8424456233
                  picture: null
        404:
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Informações de usuário não encontradas
                serverMessage: null
                data: null
    delete:
      tags:
        - Users
      summary: Deleta um usuário.
      description: Deleta um usuário e desassocia este usuário com seu registro de atleta/treinador.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do usuário.
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example: "Melissa123@"
      responses:
        200:
          description: Usuário deletado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Usuário deletado.
                serverMessage: null
                data: null

  /users/change-password/{id}:
    patch:
      tags:
        - Users
      summary: Atualiza senha do usuário
      description: Atualiza senha do usuário confirmando a senha antiga.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do usuário.
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              oldPassword: "Melissa123@"
              newPassword: "Melissa@123"
      responses:
        200:
          description: Senha de usuário atualizada.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Senha alterada com sucesso.
                serverMessage: null
                data: null
        404:
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: "Usuário não encontrado com id: {id}"
                serverMessage: null
                data: null
        409:
          description: Senha fora dos padrões.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Senha fora dos padrões.
                serverMessage: null
                data: null
        400:
          description: Antiga senha incorreta.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Antiga senha incorreta.
                serverMessage: null
                data: null

  /coaches/{id}:
    put:
      tags:
        - Coaches
      summary: Atualiza informações de treinador.
      description: Atualiza informações de persona relacionada a treinador.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do usuário.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Coach"
            example:
              firstName: Mel
              lastName: Rodrigues
              birthDate: 2004-04-09
              phone: 11910434007
              picture: null
      responses:
        200:
          description: Senha de usuário atualizada.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Treinador atualizado com sucesso.
                serverMessage: null
                data: null
        500:
          description: Erro genérico de servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Erro ao atualizar treinador.
                serverMessage: error message
                data: null

  /coaches/ms-get-coach/{id}:
    get:
      tags:
        - Coaches
      summary: Retorna as informações do treinador.
      description: Retorna informações de persona do treinador por seu ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do usuário.
      responses:
        200:
          description: Treinador encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: null
                serverMessage: null
                data:
                  firstName: Melissa
                  lastName: Cavalcante
                  birthDate: 2004-10-07
                  phone: 84244562331
                  picture: null
        404:
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Informações de usuário não encontradas
                serverMessage: null
                data: null

  /athletes/ms-get-athlete/{id}:
    get:
      tags:
        - Athletes
      summary: Retorna as informações do atleta.
      description: Retorna informações de persona do atleta por seu ID.
      parameters:
        - in: path
          name: Id
          schema:
            type: string
          required: true
          description: Id(UUID) do usuário.
      responses:
        200:
          description: Atleta encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: null
                serverMessage: null
                data:
                  firstName: Melissa
                  lastName: Cavalcante
                  birthDate: 2004-10-07
                  phone: 84244562331
                  picture: null
                  category: sub-20
                  isStarting: true
        404:
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Informações de usuário não encontradas
                serverMessage: null
                data: null
  /athletes/generate-csv:
    get:
      tags:
        - Athletes
      summary: Cria o arquivo csv.         
      description: Cria o arquivo csv com as informações dos atletas.
      parameters:
        - in: path
          name: Ids
          schema:
            type: string
          required: true
          description: List Id (UUID) do usuário.
      responses:
        200:
            description: criação do arquivo feita com sucesso.
            content:
              application/json:
                schema:
                  $ref: "#components/schemas/ResponseMessage"
                example:
                  clientMessage: null
                  serverMessage: null
                  data: null
        500:
            description: erro na criação do arquivo csv.
            content:
              application/json:
                schema:
                  $ref: "#components/schemas/ResponseMessage"
                example:
                  clientMessage: erro ao criar o arquivo csv.
                  serverMessage: null
                  data: null                        

  /athletes/{id}:
    put:
      tags:
        - Athletes
      summary: Atualiza informações de atleta.
      description: Atualiza informações de persona relacionada a atleta.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do atleta.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Athlete"
            example:
              firstName: Mel
              lastName: Rodrigues
              birthDate: 2004-04-09
              phone: 11910434007
              picture: null
              category: sub-20
              isStarting: true
      responses:
        200:
          description: Senha de usuário atualizada.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Treinador atualizado com sucesso.
                serverMessage: null
                data: null
        500:
          description: Erro genérico de servidor
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Erro ao atualizar atleta.
                serverMessage: error message
                data: null

  /athletes/register-team/{id}:
    patch:
      tags:
        - Athletes
      summary: Registra o atleta em um time.
      description: Registra o atleta em um time.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do time.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
            example:
              id: ""
      responses:
        404:
          description: Atleta não encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: "Atleta não encontrado com o id: {id}."
                serverMessage: null
                data: null
        200:
          description: Atleta cadastrado no time.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Atleta {lastName} cadatrado no time.
                serverMessage: null
                data: null
  
  /athlete-descs/:
    post:
      tags:
        - "Athletes description"
      summary: Registra uma descrição para o atletas.
      description: Registra altura, peso, posição do atleta.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/AthleteDesc"
            example:
                weight: 70.3
                height: 1.84
                position: PG
                athlete: 
                  id: ''
      responses:
        200:
          description: Descrição do atleta cadastrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Descrição do atleta cadastrado com sucesso.
                serverMessage: null
                data: null  
        400:
          description: Id do atleta não encontrado.
          content:
            application/json:
              schema: 
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Erro ao cadastrar, Id do atleta não encontrado.
                serverMessage: null
                data: null
  /athlete-descs/{athleteId}:
    get:
      tags:
        - "Athletes description"
      summary: Retorna as descrição do atleta por id.
      description: Retorna as informações da descrição do atleta por id.
      parameters:
        - in: path
          name: Id
          schema:
            type: string
          required: true
          description: Id(UUID) do atleta    
      responses:
        200:
          description: Descrição do atleta encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Descrição do atleta encontrado.
                serverMessage: null
                data: 
                  weight: 70.3
                  height: 1.84
                  position: PG
                  athlete: 
                    id: ''  
        400:
          description: Id do atleta não encontrado.
          content:
            application/json:
              schema: 
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Id do atleta não encontrado.
                serverMessage: null
                data: null
  /{athleteId}:
    put:
      tags:
        - "Athletes description"
      summary: Atualiza a descrição do atleta por id.
      description: Atualiza as informações da descrição do atleta por id.
      requestBody:
        content:
           application/json:
            schema:
              $ref: "#components/schemas/AthleteDesc"
            example:
                weight: 70.3
                height: 1.84
                position: PG
                athlete: 
                  id: '' 
      responses:
        200:
          description: Informações de atleta atualizadas.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Informações de atleta atualizadas.
                serverMessage: null
                data: null.  
        400:
          description: Id do atleta não encontrado.
          content:
            application/json:
              schema: 
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Id do atleta não encontrado.
                serverMessage: null
                data: null
  
  /injuries:
    post:
      tags:
        - Injuries
      summary: Insere um novo registro de lesão.
      description: Insere um novo registro de lesão de atleta.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Injury"
            example:
              type: Deslocamento no ombro direito.
              inicialDate: 2024-03-20
              finalDate: 2024-03-27
              athlete:
                id: ""
      responses:
        200:
          description: Lesão inserida.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Registro de lesão inserida.
                serverMessage: null
                data:
                  type: Deslocamento no ombro direito.
                  inicialDate: 2024-03-20
                  finalDate: 2024-03-27
        500:
          description: Erro genérico de servidor.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: error message
                serverMessage: null
                data: null

  /injuries/from-athlete/{athleteId}:
    get:
      tags:
        - Injuries
      summary: Retorna as informações da lesão do atleta.
      description: Retorna informações lesão do atleta por seu id.
      parameters:
        - in: path
          name: Id
          schema:
            type: string
          required: true
          description: id(UUID) do usuário.
      responses:
        200:
          description: Informações da lesão do atleta.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Lesão do Atleta encontrado.
                serverMessage: null
                data:
                  type: Deslocamento no ombro direito.
                  inicialDate: 2024-03-20
                  finalDate: 2024-03-27
        500:
          description: Atleta sem registros de lesões.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: error message
                serverMessage: null
                data: null


  /injuries/{id}:
    put:
      tags:
        - Injuries
      summary: Atualiza informações de lesão de atleta.
      description: Atualiza informações lesão de relacionada a atleta.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do atleta.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Injury"
            example:
              type: Deslocamento no cotovelo direito.
              inicialDate: 2024-03-21
              finalDate: 2024-03-31
              athlete:
                id: ""
      responses:
        200:
          description: Lesão inserida.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Lesão atualizada.
                serverMessage: null
                data: null
        404:
          description: "Lesão não encontrada."
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: "Lesão não encontrada com o id: {id}."
                serverMessage: null
                data: null
    delete:
      tags:
        - Injuries
      summary: Deleta informações de lesão de atleta.
      description: Deleta as informações da lesão relacionada ao atleta.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id(UUID) do atleta.
      responses:
        200:
          description: Registro de lesão deletado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Registro de lesão deletada.
                serverMessage: null
                data: null
        404:
          description: "Lesão não encontrada."
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: "Lesão não encontrada com o id: {id}."
                serverMessage: null
                data: null
        500:
          description: Erro genérico de servidor.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Erro ao deletar registro de lesão.
                serverMessage: null
                data: null

  /teams:
    post:
      tags:
        - Teams
      summary: Insere um novo time.
      description: Insere registro de novo time.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Team"
            example:
              category: sub-20
              picture: null
              local: Rua das araras
              name: Dragões de gelo
              coach:
                id: ""
      responses:
        200:
          description: Time registrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Time registrado.
                serverMessage: null
                data: null.
    get:
      tags:
        - Teams
      summary: Retorna as informações do time
      description: obtém informações dos times, Id do treinador e os atletas cadastrado no time.
      responses:
        200:
          description: Times encontrados.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Team"
              example: 
                clientMessage: Times encontrados.
                serverMessage: null
                data:
                  name: Dragões de gelo
                  category: sub-20
                  picture: null
                  local: Rua das araras
                  coach: 
                    id: ""
                  athletes:
                    firstName: Melissa
                    lastName: Cavalcante
                    birthDate: 2004-10-07
                    phone: 84244562331
                    picture: null
                    category: sub-20
                    isStarting: true
  /teams/{id}:             
    get:
      tags:
        - Teams
      summary: Retorna as informações do time por Id.
      description: Obtém as informações do time por Id, o Id do treinador e os atletas cadastrados no time.
      parameters:
        - in: path
          name: Id
          schema:
            type: string
          required: true
          description: Id(UUID) do Time.
      requestBody:
        content:
          application/json:
            schema: 
             $ref: "#components/schemas/Team"
            example:
              team_id: ""
      responses:
        200:
          description: Times encontrados.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Team"
              example: 
                clientMessage: Times encontrados.
                serverMessage: null
                data:
                  name: Dragões de gelo
                  category: sub-20
                  picture: null
                  local: Rua das araras
                  coach: 
                    id: ""
                  athletes:
                    firstName: Melissa
                    lastName: Cavalcante
                    birthDate: 2004-10-07
                    phone: 84244562331
                    picture: null
                    category: sub-20
                    isStarting: true  
  /teams/active-injuries/{id}:  
    get:
      tags:
        - Teams
      summary: obtém lesões ativas na equipe.                 
      description: Busca as lesões ativas na equipe.
      parameters:
        - in: path
          name: Id
          schema:
            type: string
          required: true
          description: Id(UUID) do time.
        - in: path
          name: nowDate
          schema:
            type: string
          required: true
          description: data da lesão para a busca.
      responses:
        200:
          description: Lesão encontrada.
          content: 
            application/json:
              schema: 
                $ref: "#components/schemas/Team"
              example:
                clientMessage: Lesão encontrada.
                serverMessage: null
                data:
                  type: Deslocamento no ombro direito.
                  inicialDate: 2024-03-20
                  finalDate: 2024-03-27
                  athlete:
                    firstName: Mel
                    lastName: Rodrigues
                    birthDate: 2004-04-09
                    phone: 11910434007
                    picture: null
                    category: sub-20
                    isStarting: true
        404:
          description: Lesão não encontrada.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ResponseMessage"
              example:
                clientMessage: Lesão não encontrada. 
                serverMessage: null
                data: null
  /teams/ms-get-team/{id}:
    get:
      tags:
        - Teams
      summary: Retorna as informações do time por Id                 
      description: Retorna as informações do time por id para outros microserviços.
      parameters:
        - in: path
          name: Id
          schema:
            type: string
          required: true
          description: Id(UUID) do time.
      responses:
        200:
          description: Times buscados.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Team"
              example:
                clientMessage: Times encontrados.
                serverMessage: null
                data:
                  name: Dragões de gelo
                  category: sub-20
                  picture: null
                  local: Rua das araras
                  coach: 
                    id: ""
                  athletes:
                    firstName: Melissa
                    lastName: Cavalcante
                    birthDate: 2004-10-07
                    phone: 84244562331
                    picture: null
                    category: sub-20
                    isStarting: true   
      

    
components:
  schemas:
    ResponseMessage:
      type: object
      properties:
        clientMessage:
          type: string
        serverMessage:
          type: string
        data:
          type: object

    UserAthlete:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        athlete:
          $ref: "#/components/schemas/Athlete"

    UserCoach:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        coach:
          $ref: "#/components/schemas/Coach"

    Athlete:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
        phone:
          type: string
        picture:
          type: string
        category:
          type: string
        isStarting:
          type: boolean

    Coach:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
        phone:
          type: string
        picture:
          type: string

    Persona:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
        phone:
          type: string
        picture:
          type: string

    Injury:
      type: object
      properties:
        type:
          type: string
        inicialDate:
          type: string
        finalDate:
          type: string
        athlete:
          type: object
          properties:
            id:
              type: string

    Team:
      type: object
      properties:
        category:
          type: string
        picture:
          type: string
        local:
          type: string
        name:
          type: string
        coach:
          type: object
          properties:
            id:
              type: string
